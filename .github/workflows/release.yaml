name: Release

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      create_release:
        type: boolean
        description: "Create a release"
        default: true

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Android Development Environment
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: |
          sdkmanager --install "cmake;3.22.1"
          echo "cmake.dir=$ANDROID_HOME/cmake/3.22.1" > local.properties
          echo "$ANDROID_HOME/build-tools/34.0.0" >> $GITHUB_PATH

      - name: Update Submodules
        run: |
          git submodule foreach --recursive 'git pull --rebase origin main --allow-unrelated-histories'
        continue-on-error: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Release APK
        run: ./gradlew assembleRelease

      - name: Sign app APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEYSTOREB64 }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Get tag name
        id: get_tag
        run: |
          if [ "${{ github.ref_type }}" = "tag" ]; then
            echo "tag_name=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "tag_name=v$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT
          fi

      - name: Rename APK
        id: rename_apk
        run: |
          tag_name="${{ steps.get_tag.outputs.tag_name }}"
          apk_name="linkura-localify-${tag_name}-release-arm64-v8a.apk"
          cp "${{ steps.sign_app.outputs.signedReleaseFile }}" "$apk_name"
          echo "apk_path=$apk_name" >> $GITHUB_OUTPUT
          echo "apk_name=$apk_name" >> $GITHUB_OUTPUT

      - name: Prepare Release Body
        id: prepare_release_body
        run: |
          tag_name="${{ steps.get_tag.outputs.tag_name }}"
          version="${tag_name#v}"
          
          # Read the template and replace placeholders
          template_content=$(cat .github/release_template.md)
          release_body="${template_content//VERSION/$version}"
          release_body="${release_body//vVERSION/$tag_name}"
          
          # Save to output
          echo "release_body<<EOF" >> $GITHUB_OUTPUT
          echo "$release_body" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        if: inputs.create_release == true
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag_name }}
          name: Release ${{ steps.get_tag.outputs.tag_name }}
          body: ${{ steps.prepare_release_body.outputs.release_body }}
          files: ${{ steps.rename_apk.outputs.apk_path }}

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.rename_apk.outputs.apk_name }}
          path: ${{ steps.rename_apk.outputs.apk_path }}